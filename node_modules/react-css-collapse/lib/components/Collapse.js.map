{"version":3,"sources":["../../src/components/Collapse.jsx"],"names":["initialStyle","willChange","height","overflow","visibility","Collapse","onTransitionEnd","bind","setExpanded","setCollapsed","content","props","isOpen","nextProps","setContentStyleProperty","scrollHeight","util","requestAnimationFrame","setTimeout","e","onRest","target","propertyName","property","value","style","el","className","children","Component","defaultProps","propTypes","PropTypes","node","bool","string","func"],"mappings":"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","file":"Collapse.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport util from '../util';\n\nconst initialStyle = {\n  willChange: 'height',\n  height: '0px',\n  overflow: 'hidden',\n  visibility: 'hidden',\n};\n\nclass Collapse extends Component {\n  constructor() {\n    super();\n    this.onTransitionEnd = this.onTransitionEnd.bind(this);\n    this.setExpanded = this.setExpanded.bind(this);\n    this.setCollapsed = this.setCollapsed.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.content && this.props.isOpen) {\n      this.setExpanded();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.content) {\n      return;\n    }\n\n    // expand\n    if (!this.props.isOpen && nextProps.isOpen) {\n      // have the element transition to the height of its inner content\n      this.setContentStyleProperty('height', `${this.content.scrollHeight}px`);\n      this.setContentStyleProperty('visibility', 'visible');\n    }\n\n    // collapse\n    if (this.props.isOpen && !nextProps.isOpen) {\n      // explicitly set the element's height to its current pixel height, so we\n      // aren't transitioning out of 'auto'\n      this.setContentStyleProperty('height', `${this.content.scrollHeight}px`);\n      util.requestAnimationFrame(() => {\n        // \"pausing\" the JavaScript execution to let the rendering threads catch up\n        // http://stackoverflow.com/questions/779379/why-is-settimeoutfn-0-sometimes-useful\n        setTimeout(() => {\n          this.setContentStyleProperty('height', '0px');\n          this.setContentStyleProperty('overflow', 'hidden');\n        }, 0);\n      });\n    }\n  }\n\n  onTransitionEnd(e) {\n    const { onRest, isOpen } = this.props;\n\n    if (e.target === this.content && e.propertyName === 'height') {\n      if (isOpen) {\n        this.setExpanded();\n      } else {\n        this.setCollapsed();\n      }\n      if (onRest) {\n        onRest();\n      }\n    }\n  }\n\n  setContentStyleProperty(property, value) {\n    this.content.style[property] = value;\n  }\n\n  setCollapsed() {\n    this.setContentStyleProperty('visibility', 'hidden');\n  }\n\n  setExpanded() {\n    this.setContentStyleProperty('height', 'auto');\n    this.setContentStyleProperty('overflow', 'visible');\n    this.setContentStyleProperty('visibility', 'visible');\n  }\n\n  render() {\n    return (\n      <div\n        ref={(el) => {\n          this.content = el;\n        }}\n        style={initialStyle}\n        className={this.props.className}\n        onTransitionEnd={this.onTransitionEnd}\n      >\n        {this.props.children && this.props.children}\n      </div>\n    );\n  }\n}\n\nCollapse.defaultProps = {\n  isOpen: false,\n  className: null,\n  children: null,\n  onRest: null,\n};\n\nCollapse.propTypes = {\n  children: PropTypes.node,\n  isOpen: PropTypes.bool,\n  className: PropTypes.string,\n  onRest: PropTypes.func,\n};\n\nexport default Collapse;\n"]}